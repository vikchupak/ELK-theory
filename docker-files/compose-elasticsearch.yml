# docker compose -f compose-elasticsearch.yml up elasticsearch
# docker compose -f compose-elasticsearch.yml up kibana

name: elk

networks:
  elk-network:
    name: elk-network
    driver: bridge

volumes:
  elasticsearch-data:
    name: elasticsearch-data
  kibana-data:
    name: kibana-data

services:
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:9.0.7
    environment:
      # https://stackoverflow.com/questions/78826286/configuring-elasticsearch-and-kibana-to-work-with-each-other-without-requiring-e
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200 # REST API
      - 9300:9300 # Transport protocol (node-to-node communication)
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk-network
    # https://www.elastic.co/docs/deploy-manage/deploy/self-managed/install-elasticsearch-docker-basic#_start_a_single_node_cluster
    mem_limit: 2g

  kibana:
    container_name: kibana
    image: kibana:9.0.7
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=some-random-string-32charslong1!
      - XPACK_SECURITY_ENCRYPTIONKEY=some-random-string-32charslong2!
      - XPACK_REPORTING_ENCRYPTIONKEY=some-random-string-32charslong3!
    ports:
      - 5601:5601
    volumes:
      - kibana-data:/usr/share/kibana/data
    networks:
      - elk-network
    depends_on:
      - elasticsearch
